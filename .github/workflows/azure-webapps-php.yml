name: Deploy Laravel to Azure Web App - Lanvender

env:
  AZURE_NGINX_CONFIG: lanvender-nginx.conf
  DATABASE_PATH: database/

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # - name: Generate environment file
      #   run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Install Node.js and build dependencies
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: npm install && npm run build

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, bcmath, intl, pdo_sqlite
          coverage: none

      - name: Install Laravel dependencies
        run: |
          composer validate --no-check-publish
          composer install --no-dev --prefer-dist --optimize-autoloader --no-progress
          composer require fakerphp/faker --dev

      - name: Configure Nginx for Laravel
        run: |
          echo "server {
              #proxy_cache cache;
              #proxy_cache_valid 200 1s;
              listen 8080;
              listen [::]:8080;
              root /home/site/wwwroot/public; # Changed for Laravel
              index  index.php index.html index.htm;
              server_name  example.com www.example.com;
              port_in_redirect off;

              location / {
                  index  index.php index.html index.htm hostingstart.html;
                  try_files $uri $uri/ /index.php?$args; # Changed for Laravel
              }

              # redirect server error pages to the static page /50x.html
              #
              #error_page   500 502 503 504  /50x.html; # Commented out for Laravel so that Laravel debug mode pages are shown
              location = /50x.html {
                  root   /html/;
              }

              # Disable .git directory
              location ~ /\.git {
                  deny all;
                  access_log off;
                  log_not_found off;
              }

              # Add locations of phpmyadmin here.
              location ~ [^/]\.php(/|$) {
                  fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
                  fastcgi_pass 127.0.0.1:9000;
                  include fastcgi_params;
                  fastcgi_param HTTP_PROXY "";
                  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                  fastcgi_param PATH_INFO $fastcgi_path_info;
                  fastcgi_param QUERY_STRING $query_string;
                  fastcgi_intercept_errors on;
                  fastcgi_connect_timeout         300;
                  fastcgi_send_timeout           3600;
                  fastcgi_read_timeout           3600;
                  fastcgi_buffer_size 128k;
                  fastcgi_buffers 4 256k;
                  fastcgi_busy_buffers_size 256k;
                  fastcgi_temp_file_write_size 256k;
              }
          }" | sudo tee ${{ env.AZURE_NGINX_CONFIG }}

      - name: Create startup.sh in /home/
        run: |
          echo "#!/bin/bash
          # unlink /etc/nginx/sites-enabled/default
          cp -f /home/site/wwwroot/${{ env.AZURE_NGINX_CONFIG }} /etc/nginx/sites-available/default
          # ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/

          service nginx reload
          nginx -s reload

          # Ensure the build directory exists
          # mkdir -p /home/site/build/

          # Check if Laravel project files exist in /home/site/wwwroot/
          # if [ -e /home/site/wwwroot/app ] && [ -e /home/site/wwwroot/artisan ] && [ -e /home/site/wwwroot/config ]; then
          #     rsync -av --progress --exclude=public --exclude=startup.sh /home/site/wwwroot/ /home/site/build/
          #     rsync -av --progress /home/site/wwwroot/public/ /home/site/wwwroot/
          # fi

          # Laravel migration and database seeding
          php /home/site/wwwroot/artisan migrate --force
          # Laravel clear cache
          php /home/site/wwwroot/artisan cache:clear
          php /home/site/wwwroot/artisan view:clear
          php /home/site/wwwroot/artisan config:clear
          # Store config,route,view to cache
          php /home/site/wwwroot/artisan config:cache
          php /home/site/wwwroot/artisan route:cache
          php /home/site/wwwroot/artisan view:cache

          #php artisan key:generate --show
          php /home/site/wwwroot/artisan storage:link

          #Turn off maintenance mode
          php /home/site/wwwroot/artisan up
          " | sudo tee startup.sh

      - name: Run migrations
        run: |
          pwd
          touch ${{ env.DATABASE_PATH }}database.sqlite
          chmod -R 775 ${{ env.DATABASE_PATH }}
          composer dump-autoload
          php artisan cache:table
          php artisan migrate:fresh --seed --force

      - name: Zip project for deployment
        run: |
          pwd
          zip -r release.zip ./* -x "*.git*"

      - name: Deploy to Azure Web App - Lanvender
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: release.zip

